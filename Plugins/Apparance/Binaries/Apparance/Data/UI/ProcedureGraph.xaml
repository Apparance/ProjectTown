<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"  
	xmlns:app="clr-namespace:Apparance.Plugin;assembly=Apparance.Engine"
	xmlns:vice="clr-namespace:Vice.Core;assembly=Apparance.Core"
	xmlns:appui="clr-namespace:Apparance.UI;assembly=Apparance.Editor"
	>
   
	<UserControl.Resources>
	<!-- converters -->
	<BooleanToVisibilityConverter x:Key="bool2vis" />
	<vice:MarginPositioner x:Key="positioner" />
	<app:ConstantTemplateSelector x:Key="consttemplate" />
	<vice:ColourConverter x:Key="colour" />
	<vice:BooleanToDoubleConverter x:Key="bool2double" />
	<vice:BooleanToStringConverter x:Key="bool2string" />
	<appui:StyleLookupConverter x:Key="appearance_selector" />
	<appui:TypeToColourConverter x:Key="type_colour" 
		IntegerColour="#33F"
		FloatColour="#F3F"
		BoolColour="#0A0"
		FColourColour="Gray"
		Vector3Colour="Orange"
		StringColour="#FF0"
		ListColour="#660"
		ModelSegmentColour="White"
		FrameColour="Black"
		DarkBlend="0.3"
		LightBlend="0.1"
	/>

	<!-- drawing resources -->
	<LinearGradientBrush x:Key="background_brush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#444" Offset="0"/>
		<GradientStop Color="#555" Offset="0.2"/>
		<GradientStop Color="#555" Offset="0.9"/>
		<GradientStop Color="#444" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="procedure_brush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#222" Offset="0"/>
		<GradientStop Color="#333" Offset="0.2"/>
		<GradientStop Color="#333" Offset="0.8"/>
		<GradientStop Color="#222" Offset="1"/>
	</LinearGradientBrush>	
	<LinearGradientBrush x:Key="operator_brush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#222" Offset="0"/>
		<GradientStop Color="#111" Offset="0.2"/>
		<GradientStop Color="#111" Offset="0.8"/>
		<GradientStop Color="#000" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="operatorprocedure_brush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#444" Offset="0"/>
		<GradientStop Color="#333" Offset="0.15"/>
		<GradientStop Color="#333" Offset="0.8"/>
		<GradientStop Color="#111" Offset="1"/>
	</LinearGradientBrush>	
	<LinearGradientBrush x:Key="procinputbg" StartPoint="0,0" EndPoint="1,0">
		<GradientStop Color="#0A70" Offset="0"/>
		<GradientStop Color="#3A70" Offset="0.3"/>
		<GradientStop Color="#CA70" Offset="0.7"/>
		<GradientStop Color="#FA70" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="procoutputbg" StartPoint="1,0" EndPoint="0,0">
		<GradientStop Color="#0A70" Offset="0"/>
		<GradientStop Color="#3A70" Offset="0.3"/>
		<GradientStop Color="#CA70" Offset="0.7"/>
		<GradientStop Color="#FA70" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="note_bg" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#CEF8" Offset="0"/>
		<GradientStop Color="#CEF8" Offset="0.3"/>
		<GradientStop Color="#CDE6" Offset="0.8"/>
		<GradientStop Color="#CCD5" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="group_bg" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#2000" Offset="0"/>
		<GradientStop Color="#0000" Offset="0.3"/>
		<GradientStop Color="#2000" Offset="0.8"/>
		<GradientStop Color="#3000" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="note_edit_bg" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#666" Offset="0"/>
		<GradientStop Color="#666" Offset="0.3"/>
		<GradientStop Color="#555" Offset="0.8"/>
		<GradientStop Color="#444" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="label_bg" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#FFD" Offset="0"/>
		<GradientStop Color="#FFD" Offset="0.3"/>
		<GradientStop Color="#EEC" Offset="0.8"/>
		<GradientStop Color="#DDA" Offset="1"/>
	</LinearGradientBrush>

	<!-- DEFAULT ELEMENT APPEARANCE -->
	<Style x:Key="ProcedureElementAppearance_Default" TargetType="Border">
		<Setter Property="Background" Value="Magenta" />
	</Style>
	<Style x:Key="ProcedureElementHighlight_Default" TargetType="Border">
		<Setter Property="CornerRadius" Value="6" />
		<Setter Property="Background" Value="Magenta" />
	</Style>

	<!-- OPERATOR APPEARANCE -->
	<Style x:Key="ProcedureOperatorAppearance_Operator" TargetType="Border">
		<Setter Property="CornerRadius" Value="6" />
		<Setter Property="Background" Value="{StaticResource operator_brush}" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderThickness" Value="1" />
	</Style>

	<!-- PROCEDURE APPEARANCE -->
	<Style x:Key="ProcedureOperatorAppearance_Procedure" TargetType="Border">
		<Setter Property="CornerRadius" Value="6" />
		<Setter Property="Background" Value="{StaticResource operatorprocedure_brush}" />
		<Setter Property="BorderBrush" Value="#222" />
		<Setter Property="BorderThickness" Value="1" />
	</Style>
	<Style x:Key="ProcedureOperatorAppearance_CapturingProcedure" TargetType="Border">
		<Setter Property="CornerRadius" Value="6" />
		<Setter Property="Background" Value="{StaticResource operatorprocedure_brush}" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderThickness" Value="3,1" />
	</Style>

	<!-- ELEMENT HIGHLIGHTING -->
	<Style x:Key="ProcedureOperatorHighlight_Normal" TargetType="Border">
	</Style>
	<Style x:Key="ProcedureOperatorHighlight_Highlighted" TargetType="Border">
		<Setter Property="CornerRadius" Value="6" />
		<Setter Property="BorderBrush" Value="#cfb0" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Margin" Value="-1" />
	</Style>
	<Style x:Key="ProcedureOperatorHighlight_Selected" TargetType="Border">
		<Setter Property="CornerRadius" Value="6" />
		<Setter Property="Background" Value="#aa70" />
		<Setter Property="BorderBrush" Value="#0000" />
		<Setter Property="BorderThickness" Value="1" />
	</Style>
	<Style x:Key="ProcedureOperatorHighlight_SelectedHighlighted" TargetType="Border">
		<Setter Property="CornerRadius" Value="6" />
		<Setter Property="Background" Value="#aa70" />
		<Setter Property="BorderBrush" Value="#cfb0" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Margin" Value="-1" />
	</Style>
	<Style x:Key="Procedure_PromptOverlay" TargetType="Border">
		<Setter Property="CornerRadius" Value="6" />
		<Setter Property="BorderBrush" Value="white" />
		<Setter Property="Opacity" Value="0.2" />
		<Setter Property="BorderThickness" Value="1" />
	</Style>

	<!-- MISC TEXT -->
	<Style x:Key="op_title_text" TargetType="TextBlock">
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="16" />
	</Style>
	<Style x:Key="op_symbol_text" TargetType="TextBlock">
		<Setter Property="Foreground" Value="White" />
	</Style>
	<Style x:Key="op_label_text" TargetType="TextBlock">
		<Setter Property="Foreground" Value="White" />
	</Style>
	<Style x:Key="op_comment_text" TargetType="TextBlock">
		<Setter Property="Foreground" Value="#88C" />
	</Style>
	<Style x:Key="op_io_name_text" TargetType="TextBlock">
		<Setter Property="Foreground" Value="Gray" />
	</Style>
	<Style x:Key="op_io_value_text" TargetType="TextBlock">
		<Setter Property="Foreground" Value="Silver" />
	</Style>
	<Style x:Key="proc_io_name_text" TargetType="TextBlock">
		<Setter Property="Foreground" Value="Black" />
	</Style>
	<Style x:Key="io_value_text" TargetType="TextBlock">
	</Style>

	<!-- Tab button style -->
	<Color x:Key="ControlNormalColor">#666</Color>
	<Color x:Key="ControlMouseOverColor">#AA4</Color>
	<Color x:Key="DisabledControlColor">#FFF2F2F2</Color>
	<Color x:Key="DisabledForegroundColor">#FFBFBFBF</Color>
	<Color x:Key="ControlPressedColor">#444</Color>
	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="1" StrokeThickness="1" Stroke="#60000000" StrokeDashArray="1 2" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="tabbarbutton" TargetType="ToggleButton">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
		<Setter Property="MinWidth"  Value="60" />
		<Setter Property="Foreground" Value="#CCC" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border BorderBrush="Black" BorderThickness="1,1,1,0" CornerRadius="8,8,0,0" TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border">
						<Border.Background>
							<SolidColorBrush  Color="{DynamicResource ControlNormalColor}" />
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0" />
									<VisualTransition GeneratedDuration="0" To="Pressed" />
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal" >
									<Storyboard>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness"
											Storyboard.TargetName="Border">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="0.25,0.25,0.25,1" />
										</ThicknessAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin"
											Storyboard.TargetName="Cntnt">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="0.75,0.75,0.75,0" />
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
											Storyboard.TargetName="Border">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
										</ColorAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness"
											Storyboard.TargetName="Border">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="0.25,0.25,0.25,1" />
										</ThicknessAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin"
											Storyboard.TargetName="Cntnt">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="0.75,0.75,0.75,0" />
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
											Storyboard.TargetName="Border">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
										</ColorAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness"
											Storyboard.TargetName="Border">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="1,1,1,0" />
										</ThicknessAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin"
											Storyboard.TargetName="Cntnt">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="0,0,0,0" />
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
											Storyboard.TargetName="Border">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlColor}" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
											Storyboard.TargetName="Border">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter Margin="2"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						RecognizesAccessKey="True" x:Name="Cntnt"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- PROCEDURE INPUT -->
	<DataTemplate x:Key="procedure_input_visualisation">
		<Grid DataContext="{Binding Source}" Width="150" Margin="0,0,0,0" Height="25" ToolTip="{Binding Description}" Background="Transparent">
			<Border CornerRadius="6" Margin="1" Background="{StaticResource procinputbg}" Opacity="{Binding IsSelected,Converter={StaticResource bool2double},ConverterParameter=0|0.5}" />
			<Border Style="{StaticResource ProcedureOperatorHighlight_Highlighted}" Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}" Margin="1" SnapsToDevicePixels="true"/>
			<vice:EnumToStringMapper x:Name="hilight" Input="{Binding Highlight}" Map="None=Transparent,Hover=White,Compatible=Lime,CompatibleBlocked=Red,Coerce=Green" />
			<Grid HorizontalAlignment="Right" Width="13" Height="12" Margin="0,4,-15,0">
				<Polygon Points="1,1 7,5 1,9" Stroke="{Binding DataType,Converter={StaticResource type_colour},ConverterParameter=DarkBrush}" Fill="{Binding DataType,Converter={StaticResource type_colour},ConverterParameter=Brush}" />
				<Polygon Points="-1,-1 9,4.5 -1,10" 
					StrokeThickness="1" Stroke="Black" Fill="{Binding Output,ElementName=hilight}"
						Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}" />
				<app:AnchorPoint VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ap" Position="{Binding AnchorRelative,Mode=OneWayToSource}" Margin="0,0,0,2"/>
			</Grid>
			<Grid HorizontalAlignment="Right" Margin="0,3,2,0">
				<TextBlock Text="{Binding Name}" Margin="4,1,4,0" HorizontalAlignment="Right" Style="{StaticResource proc_io_name_text}" />
			</Grid>
			<!-- Insertion Points -->
			<Grid VerticalAlignment="top" DataContext="{Binding UpperInsertionPoint}" Visibility="{Binding IsEnabled,Converter={StaticResource bool2vis}}" Background="transparent" Height="25" Margin="0,-12.5,0,0">
				<Border CornerRadius="3" Height="5" Background="orange" Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}"/>
			</Grid>
			<Grid VerticalAlignment="bottom" DataContext="{Binding LowerInsertionPoint}" Visibility="{Binding IsEnabled,Converter={StaticResource bool2vis}}" Background="transparent" Height="25" Margin="0,0,0,-12.5">
				<Border CornerRadius="3" Height="5" Background="orange" Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}"/>
			</Grid>
	
		</Grid>
	</DataTemplate>

	<!-- PROCEDURE OUTPUT -->
	<DataTemplate x:Key="procedure_output_visualisation">
		<Grid DataContext="{Binding Sink}" Width="150" Margin="0,0,0,0" Height="25" ToolTip="{Binding Description}" Background="Transparent">
			<Border CornerRadius="6" Margin="1" Background="{StaticResource procoutputbg}" Opacity="{Binding IsSelected,Converter={StaticResource bool2double},ConverterParameter=0|0.5}" />
			<Border Style="{StaticResource ProcedureOperatorHighlight_Highlighted}" Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}" Margin="1" SnapsToDevicePixels="true"/>
			<vice:EnumToStringMapper x:Name="hilight" Input="{Binding Highlight}" Map="None=Transparent,Hover=White,Compatible=Lime,CompatibleBlocked=Red,Coerce=Green" />
			<Grid HorizontalAlignment="Left" Width="11" Height="12" Margin="0,4,0,0">
				<Polygon Points="-1,1 5,5 -1,9" Stroke="{Binding DataType,Converter={StaticResource type_colour},ConverterParameter=DarkBrush}" Fill="{Binding DataType,Converter={StaticResource type_colour},ConverterParameter=Brush}" />
				<Polygon Points="-2,-1 8,4.5 -2,10" 
					StrokeThickness="1" Stroke="Black" Fill="{Binding Output,ElementName=hilight}"
						Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}" />
				<app:AnchorPoint VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ap" Position="{Binding AnchorRelative,Mode=OneWayToSource}" Margin="0,0,11,2"/>
			</Grid>
			<Grid HorizontalAlignment="Left" Margin="7,3,0,0">
				<TextBlock Text="{Binding Name}" Margin="4,1,5,0" HorizontalAlignment="Left" Style="{StaticResource proc_io_name_text}" />
			</Grid>
			<!-- Insertion Points -->
			<Grid VerticalAlignment="top" DataContext="{Binding UpperInsertionPoint}" Visibility="{Binding IsEnabled,Converter={StaticResource bool2vis}}" Background="transparent" Height="25" Margin="0,-12.5,0,0">
				<Border CornerRadius="3" Height="5" Background="orange" Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}"/>
			</Grid>
			<Grid VerticalAlignment="bottom" DataContext="{Binding LowerInsertionPoint}" Visibility="{Binding IsEnabled,Converter={StaticResource bool2vis}}" Background="transparent" Height="25" Margin="0,0,0,-12.5">
				<Border CornerRadius="3" Height="5" Background="orange" Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}"/>
			</Grid>
		</Grid>
	</DataTemplate>

	<!-- OPERATOR INPUT -->
	<DataTemplate x:Key="operator_input_visualisation">
		<Grid Margin="0,-1,6,-1" ToolTip="{Binding Description}" Cursor="Arrow">
			<vice:EnumToStringMapper x:Name="hilight" Input="{Binding Highlight}" Map="None=Transparent,Hover=White,Compatible=Lime,CompatibleBlocked=Red,Coerce=Green" />
			<Grid HorizontalAlignment="Left" Width="11" Height="12" Margin="0,0,0,0">
				<Polygon Points="1,1 7,5 1,9" Stroke="{Binding DataType,Converter={StaticResource type_colour},ConverterParameter=DarkBrush}" Fill="{Binding DataType,Converter={StaticResource type_colour},ConverterParameter=Brush}" />
				<Polygon Points="-1,-1 9,4.5 -1,10" 
					StrokeThickness="1" Stroke="{Binding IsSelected,Converter={StaticResource bool2string},ConverterParameter=Black|Orange}" Fill="{Binding Output,ElementName=hilight}"
						Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}" />
				<app:AnchorPoint VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="ap" Position="{Binding AnchorRelative,Mode=OneWayToSource}" />
			</Grid>
			<TextBlock Text="{Binding Name}" Margin="8,-1,0,0" HorizontalAlignment="Left" IsHitTestVisible="True" Style="{StaticResource op_io_name_text}" />
			<Grid Margin="-15,-1,0,-1" Width="30" HorizontalAlignment="Left" Background="Green" Opacity="0.0" />
		</Grid>
	</DataTemplate>

	<!-- OPERATOR OUTPUT -->
	<DataTemplate x:Key="operator_output_visualisation">
		<Grid Margin="8,-1,0,-1" ToolTip="{Binding Description}" Cursor="Arrow">
			<vice:EnumToStringMapper x:Name="hilight" Input="{Binding Highlight}" Map="None=Transparent,Hover=White,Compatible=Lime,CompatibleBlocked=Red,Coerce=Green" />
			<Grid HorizontalAlignment="Right" Width="11" Height="12" Margin="0,5,-11,0">
				<Polygon Points="0,0 6,4 0,8" Stroke="{Binding DataType,Converter={StaticResource type_colour},ConverterParameter=DarkBrush}" Fill="{Binding DataType,Converter={StaticResource type_colour},ConverterParameter=Brush}" />
				<Polygon Points="-1,-1 9,4.5 -1,10" 
					StrokeThickness="1" Stroke="{Binding IsSelected,Converter={StaticResource bool2string},ConverterParameter=Black|Orange}" Fill="{Binding Output,ElementName=hilight}"
						Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}" />
				<app:AnchorPoint VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ap" Position="{Binding AnchorRelative,Mode=OneWayToSource}" Margin="0,-3,0,0"/>
			</Grid>
			<TextBlock Text="{Binding Name}" Margin="0,0,5,0"  HorizontalAlignment="Right" IsHitTestVisible="True" Style="{StaticResource op_io_name_text}" />
			<Grid Margin="0,-1,-20,-1" Width="30" HorizontalAlignment="Right" Background="Green" Opacity="0.0" />
		</Grid>
	</DataTemplate>

	<!-- OPERATOR -->
	<DataTemplate x:Key="operator_visualisation">
		<Grid ToolTip="{Binding Operator.Description}" Cursor="{Binding IsSelected,Converter={StaticResource bool2string},ConverterParameter=Arrow|SizeAll}"
			 	vice:SizeObserver.Observe="True" vice:SizeObserver.ObservedWidth="{Binding WidthReturn,Mode=OneWayToSource}" vice:SizeObserver.ObservedHeight="{Binding HeightReturn,Mode=OneWayToSource}">
			<Grid.RenderTransform>
				<TranslateTransform X="{Binding Location.X}" Y="{Binding Location.Y}" />
			</Grid.RenderTransform>
			<Grid HorizontalAlignment="Left">
				<Border SnapsToDevicePixels="True" Style="{Binding AppearanceSelector,Converter={StaticResource appearance_selector}}" />
				<Border SnapsToDevicePixels="True" Style="{Binding HighlightSelector,Converter={StaticResource appearance_selector}}" />
				<StackPanel Margin="0,1,0,3">
					<TextBlock Text="{Binding Operator.DisplayName}" HorizontalAlignment="Center" Margin="5,-1" Visibility="{Binding IsShowText,Converter={StaticResource bool2vis}}" Style="{StaticResource op_title_text}" />
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<!-- INPUTS -->
						<ItemsControl Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" ItemsSource="{Binding Inputs}" ItemTemplate="{StaticResource operator_input_visualisation}" Margin="0,2,-6,1" MinWidth="15" />

						<Grid Grid.Column="1">
							<TextBlock Text="{Binding DisplaySymbol}" VerticalAlignment="Center" FontFamily="Symbol" FontSize="36" Margin="0,-15,0,-5" Visibility="{Binding IsDisplaySymbol,Converter={StaticResource bool2vis}}"  Style="{StaticResource op_symbol_text}" />
							<TextBlock Text="{Binding DisplayLabel}" VerticalAlignment="Center" FontSize="24" Margin="-6,-4,-2,-0" Visibility="{Binding IsDisplayLabel,Converter={StaticResource bool2vis}}"  Style="{StaticResource op_label_text}" />
						</Grid>

						<!-- OUTPUTS -->
						<ItemsControl VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="2" ItemsSource="{Binding Outputs}" ItemTemplate="{StaticResource operator_output_visualisation}" Margin="-6,1,0,0" />

					</Grid>
				</StackPanel>
			</Grid>
			<Grid Height="100" Margin="0,-105,0,0" VerticalAlignment="Top">
				<TextBlock Visibility="{Binding HasComment,Converter={StaticResource bool2vis}}" Text="{Binding Comment}" VerticalAlignment="Bottom" Style="{StaticResource op_comment_text}" />
			</Grid>
		</Grid>
	</DataTemplate>

	<!-- CONSTANT UI -->
	<!-- default -->
	<DataTemplate x:Key="ConstantTemplate_Default">
		<TextBlock Text="{Binding Value}" MaxHeight="20" MaxWidth="100" ToolTip="{Binding Value}" Style="{StaticResource io_value_text}"/>
	</DataTemplate>
	<!-- Single -->
	<DataTemplate x:Key="ConstantTemplate_Single">
		<TextBlock Text="{Binding Value}" Style="{StaticResource op_io_value_text}"/>
	</DataTemplate>
	<!-- Bool -->
	<DataTemplate x:Key="ConstantTemplate_Boolean">
		<TextBlock Text="{Binding Value}" Style="{StaticResource op_io_value_text}"/>
	</DataTemplate>
	<!-- Int32 -->
	<DataTemplate x:Key="ConstantTemplate_Int32">
		<TextBlock Text="{Binding ConstantValueText}" Style="{StaticResource op_io_value_text}"/>
	</DataTemplate>
	<!-- Vector3 -->
	<DataTemplate x:Key="ConstantTemplate_Vector3">
		<TextBlock Text="{Binding Value}" Style="{StaticResource op_io_value_text}"/>
	</DataTemplate>
	<!-- Colour -->
	<DataTemplate x:Key="ConstantTemplate_Colour">
		<StackPanel Orientation="Horizontal" DataContext="{Binding Value,Converter={StaticResource colour}}" >
			<TextBlock Text="{Binding ScR}" Style="{StaticResource op_io_value_text}" />
			<TextBlock Text=", " Style="{StaticResource op_io_value_text}" />
			<TextBlock Text="{Binding ScG}" Style="{StaticResource op_io_value_text}" />
			<TextBlock Text=", " Style="{StaticResource op_io_value_text}" />
			<TextBlock Text="{Binding ScB}" Style="{StaticResource op_io_value_text}" />
			<Border Width="20" BorderBrush="Black" BorderThickness="1" Height="12" Margin="4,0,0,0">
				<Border.Background>
					<SolidColorBrush Color="{Binding .}"/>
				</Border.Background>
			</Border>
		</StackPanel>
	</DataTemplate>
	<!-- Model Segment -->
	<DataTemplate x:Key="ConstantTemplate_ModelSegment">
		<TextBlock Text="-" Style="{StaticResource op_io_value_text}"/>
	</DataTemplate>
	<!-- String -->
	<DataTemplate x:Key="ConstantTemplate_String">
		<TextBlock Text="{Binding Value}" Style="{StaticResource op_io_value_text}"/>
	</DataTemplate>
	<!-- String -->
	<DataTemplate x:Key="ConstantTemplate_List`1">
	</DataTemplate>
	<!-- Frame -->
	<DataTemplate x:Key="ConstantTemplate_Frame">
		<TextBlock Text="[ ]" Style="{StaticResource op_io_value_text}"/>
	</DataTemplate>

	<!-- CONNECTION -->
	<DataTemplate x:Key="connection_visualisation">
		<Grid >
		<!-- connected -->
		<Grid Visibility="{Binding IsConnected,Converter={StaticResource bool2vis}}"
			Opacity="{Binding IsSubdued,Converter={StaticResource bool2double}, ConverterParameter=1.0|0.3}">
			<Path Stroke="{Binding DataType,Converter={StaticResource type_colour},ConverterParameter=Brush}" StrokeThickness="1.5">
			<Path.Data>
			<PathGeometry>
			<PathFigure StartPoint="{Binding SourcePosition}">
			<BezierSegment Point1="{Binding SourceHandle}"
					Point2="{Binding SinkHandle}" 
					Point3="{Binding SinkPosition}"/>
			</PathFigure>
			</PathGeometry>
			</Path.Data>
			</Path>

			<Path Stroke="Transparent" StrokeThickness="14" IsHitTestVisible="true" >
			<Path.Data>
			<PathGeometry>
			<PathFigure StartPoint="{Binding SourcePosition}">
			<BezierSegment Point1="{Binding SourceHandle}"
					Point2="{Binding SinkHandle}" 
					Point3="{Binding SinkPosition}"/>
			</PathFigure>
			</PathGeometry>
			</Path.Data>
			</Path>
		</Grid>
		<!-- constant-->
		<Grid Visibility="{Binding IsOperatorConstantConnection,Converter={StaticResource bool2vis}}" Margin="0,-8,0,0">
			<Grid>
				<Grid.RenderTransform>
					<TranslateTransform X="{Binding SinkPosition.X}" Y="{Binding SinkPosition.Y}" />
				</Grid.RenderTransform>
				<ContentPresenter Margin="-500,0,5,0" HorizontalAlignment="Right" Content="{Binding Constant}" ContentTemplateSelector="{StaticResource consttemplate}"/>
			</Grid>
		</Grid>
		</Grid>
	</DataTemplate>

	<!-- CONNECTION DECORATION -->
	<DataTemplate x:Key="connection_decoration">
		<Grid IsHitTestVisible="false">
		<!-- connected -->
		<Grid Visibility="{Binding IsConnectionAvailable,Converter={StaticResource bool2vis}}">

			<Path StrokeThickness="2" Visibility="{Binding IsSourceHilighted,Converter={StaticResource bool2vis}}">
			<Path.Data>
			<PathGeometry>
			<PathFigure StartPoint="{Binding Connection.SourcePosition}">
			<BezierSegment Point1="{Binding Connection.SourceHandle}"
					Point2="{Binding Connection.SinkHandle}" 
					Point3="{Binding Connection.SinkPosition}"/>
			</PathFigure>
			</PathGeometry>
			</Path.Data>
			<Path.Stroke>
				<LinearGradientBrush x:Key="connection_source" StartPoint="0,0" EndPoint="1,0">
					<GradientStop Color="{Binding SourceColour}" Offset="0"/>
					<GradientStop Color="{Binding SourceColour}" Offset="0.25"/>
					<GradientStop Color="Black" Offset="0.5"/>
					<GradientStop Color="Black" Offset="1"/>
					<LinearGradientBrush.RelativeTransform>
						<RotateTransform Angle="{Binding HilightGradientOrientation}" CenterX="0.5" CenterY="0.5" />
					</LinearGradientBrush.RelativeTransform>
				</LinearGradientBrush>
			</Path.Stroke>
			</Path>

			<Path StrokeThickness="2" Visibility="{Binding IsSinkHilighted,Converter={StaticResource bool2vis}}">
			<Path.Data>
			<PathGeometry>
			<PathFigure StartPoint="{Binding Connection.SourcePosition}">
			<BezierSegment Point1="{Binding Connection.SourceHandle}"
					Point2="{Binding Connection.SinkHandle}" 
					Point3="{Binding Connection.SinkPosition}"/>
			</PathFigure>
			</PathGeometry>
			</Path.Data>
			<Path.Stroke>
				<LinearGradientBrush x:Key="connection_sink" StartPoint="1,0" EndPoint="0,0">
					<GradientStop Color="{Binding SinkColour}" Offset="0"/>
					<GradientStop Color="{Binding SinkColour}" Offset="0.25"/>
					<GradientStop Color="Black" Offset="0.5"/>
					<GradientStop Color="Black" Offset="1"/>
					<LinearGradientBrush.RelativeTransform>
						<RotateTransform Angle="{Binding HilightGradientOrientation}" CenterX="0.5" CenterY="0.5" />
					</LinearGradientBrush.RelativeTransform>
				</LinearGradientBrush>
			</Path.Stroke>
			</Path>

		
		</Grid>
		</Grid>
	</DataTemplate>

	<!-- Procedure Operator Input property editing -->
	<DataTemplate x:Key="ProcedureOperatorInputDataTemplate">
		<TextBlock Text="Hello" />
	</DataTemplate>

	<!-- Annotation -->
	<DataTemplate x:Key="annotation_visualisation">
		<Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="{Binding Location,Converter={StaticResource positioner}}" Width="{Binding Width}" Height="{Binding Height}">
			<Border BorderThickness="0,0,4,4" BorderBrush="#2000" Background="Transparent" CornerRadius="0" Margin="3,3,0,0" />

			<Grid Visibility="{Binding IsSimpleNote,Converter={StaticResource bool2vis}}">
				<Border BorderThickness="1" BorderBrush="#2fff" Background="{StaticResource note_bg}" CornerRadius="0" Margin="0,0,3,3" />
				<DockPanel TextBlock.Foreground="#C000">
					<TextBlock DockPanel.Dock="Top" Text="{Binding Title}" FontSize="30" Margin="10,1,10,-4" FontStyle="Italic" TextWrapping="Wrap" Visibility="{Binding HasTitle,Converter={StaticResource bool2vis}}" />
					<TextBlock Text="{Binding Text}" Margin="12,4,12,2" FontSize="14" TextWrapping="Wrap" Opacity="0.75" />
				</DockPanel>
			</Grid>
			<Grid Visibility="{Binding IsOperatorGroup,Converter={StaticResource bool2vis}}">
				<Border BorderThickness="1" BorderBrush="#2fff" Background="{StaticResource group_bg}" CornerRadius="0" Margin="0,0,3,3" />
				<DockPanel TextBlock.Foreground="#4FFF">
					<TextBlock DockPanel.Dock="Top" Text="{Binding Title}" FontSize="30" Margin="8,-1,8,-4" FontStyle="Italic" TextWrapping="Wrap" Visibility="{Binding HasTitle,Converter={StaticResource bool2vis}}" />
					<TextBlock Text="{Binding Text}" Margin="8,4,8,2" FontSize="14" TextWrapping="Wrap" Opacity="0.75" />
				</DockPanel>
			</Grid>
		</Grid>
	</DataTemplate>

	<!-- Main Procedure Graph -->
	<DataTemplate x:Key="proc_graph">
		<Grid DataContext="{Binding Procedure}" Visibility="{Binding IsVisible,Converter={StaticResource bool2vis}}" IsHitTestVisible="{Binding IsVisible}">
			<Grid ClipToBounds="True">

				<!-- centre calculation -->
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<Grid x:Name="halfview" Grid.Column="0" Grid.Row="0" />
				</Grid>

				<!-- PROCEDURE -->
				<vice:ThicknessBuilder x:Name="centre" Left="{Binding ActualWidth,ElementName=halfview}" Top="{Binding ActualHeight,ElementName=halfview}" />
				<Grid Margin="{Binding Thickness,ElementName=centre}" >
					<Grid Margin="{Binding BoundaryTopLeftScaled,Converter={StaticResource positioner}}">
						<Grid Margin="{Binding ViewCentreScaled,Converter={StaticResource positioner},ConverterParameter=-1}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="{Binding BoundarySizeWithIOMargin.Width}" Height="{Binding BoundarySizeWithIOMargin.Height}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="{Binding IOMarginWidth}"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="{Binding IOMarginWidth}"/>
							</Grid.ColumnDefinitions>

							<!-- view transform -->
							<Grid.LayoutTransform>
								<TransformGroup>
									<ScaleTransform ScaleX="{Binding ViewZoom}" ScaleY="{Binding ViewZoom}" />
								</TransformGroup>
							</Grid.LayoutTransform>


							<!-- frame -->
							<Border Grid.Column="1" BorderBrush="Black" BorderThickness="3" CornerRadius="5" Background="{StaticResource procedure_brush}">
								<DockPanel>
									<Grid DockPanel.Dock="top">
										<!-- title -->
										<TextBlock HorizontalAlignment="Center" Text="{Binding FullName}" Opacity="0.1" Foreground="White" FontSize="24" FontWeight="Normal" Margin="5,0,0,0" >
											<TextBlock.RenderTransform>
												<TranslateTransform X="-1" Y="-1"/>
											</TextBlock.RenderTransform>
										</TextBlock>
										<TextBlock HorizontalAlignment="Center" Text="{Binding FullName}" Opacity="0.5" Foreground="Black" FontSize="24" FontWeight="Normal" Margin="5,0,0,0" >
											<TextBlock.RenderTransform>
												<TranslateTransform X="+1" Y="+1"/>
											</TextBlock.RenderTransform>
										</TextBlock> 
										<TextBlock HorizontalAlignment="Center" Text="{Binding FullName}" Opacity="0.75" Foreground="Gray" FontSize="24" FontWeight="Normal" Margin="5,0,0,0" />
										<TextBlock HorizontalAlignment="Right" Text="&#x26;" FontFamily="Wingdings" Foreground="#33D" FontSize="30" FontWeight="Bold" Margin="0,7,10,0" Visibility="{Binding IsResource,Converter={StaticResource bool2vis}}" ToolTip="This is a resource procedure, evaluation is deferred." />
									</Grid>

									<!-- prompt -->
									<Border Margin="10" Style="{StaticResource Procedure_PromptOverlay}" Visibility="{Binding Operators.IsEmpty,Converter={StaticResource bool2vis}}" SnapsToDevicePixels="true" IsHitTestVisible="false">
										<StackPanel VerticalAlignment="center" HorizontalAlignment="center" >
											<TextBlock Foreground="white" TextAlignment="center" TextWrapping="Wrap">Drag Operators or Procedures here.</TextBlock>
											<TextBlock Foreground="white" TextAlignment="center" TextWrapping="Wrap" Margin="0,10,0,0">Right click to select via the context menu.</TextBlock>
										</StackPanel>
									</Border>

								</DockPanel>
							</Border>

							<!-- Annotation -->
							<ItemsControl Grid.Column="0" Grid.ColumnSpan="3" ItemsSource="{Binding Annotations}" ItemTemplate="{StaticResource annotation_visualisation}">
								<ItemsControl.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
										<TranslateTransform X="{Binding BoundaryTopLeft.X}" Y="{Binding BoundaryTopLeft.Y}" />
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
									</TransformGroup>
								</ItemsControl.RenderTransform>
								<ItemsControl.ItemsPanel><ItemsPanelTemplate><Canvas/></ItemsPanelTemplate></ItemsControl.ItemsPanel>
							</ItemsControl>

							<!-- annotation position editing -->
							<Grid Grid.Column="0" Grid.ColumnSpan="3" Visibility="{Binding IsEditingAnnotationPosition,Converter={StaticResource bool2vis}}" >
								<Grid.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
										<TranslateTransform X="{Binding BoundaryTopLeft.X}" Y="{Binding BoundaryTopLeft.Y}" />
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
									</TransformGroup>
								</Grid.RenderTransform>
								<Border DataContext="{Binding EditAnnotationPosition}" BorderBrush="Black" BorderThickness="2" Background="Transparent" CornerRadius="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="{Binding Location,Converter={StaticResource positioner}}" Width="{Binding Width}" Height="{Binding Height}" IsHitTestVisible="True">
								<Grid>
									<Grid Margin="-25">
										<DockPanel>
											<DockPanel DockPanel.Dock="Top" Height="50">
												<Grid DockPanel.Dock="Left" Width="50" DataContext="{Binding TopLeftHandle}" Cursor="{Binding EditCursor}" Background="Transparent" IsHitTestVisible="True" />
												<Grid DockPanel.Dock="Right" Width="50" DataContext="{Binding TopRightHandle}" Cursor="{Binding EditCursor}" Background="Transparent" IsHitTestVisible="True" />
												<Grid DataContext="{Binding TopHandle}" Cursor="{Binding EditCursor}" Background="Transparent" IsHitTestVisible="True" />
											</DockPanel>
											<DockPanel DockPanel.Dock="Bottom" Height="50">
												<Grid DockPanel.Dock="Left" Width="50" DataContext="{Binding BottomLeftHandle}" Cursor="{Binding EditCursor}" Background="Transparent" IsHitTestVisible="True" />
												<Grid DockPanel.Dock="Right" Width="50" DataContext="{Binding BottomRightHandle}" Cursor="{Binding EditCursor}" Background="Transparent" IsHitTestVisible="True" />
												<Grid DataContext="{Binding BottomHandle}" Cursor="{Binding EditCursor}" Background="Transparent" IsHitTestVisible="True" />
											</DockPanel>
											<DockPanel>
												<Grid DockPanel.Dock="Left" Width="50" DataContext="{Binding LeftHandle}" Cursor="{Binding EditCursor}" Background="Transparent" IsHitTestVisible="True" />
												<Grid DockPanel.Dock="Right" Width="50" DataContext="{Binding RightHandle}" Cursor="{Binding EditCursor}" Background="Transparent" IsHitTestVisible="True" />
												<Grid DataContext="{Binding CentreHandle}" Cursor="{Binding EditCursor}" Background="Transparent" IsHitTestVisible="True" />
											</DockPanel>
										</DockPanel>
									</Grid>
								</Grid>
								</Border>
							</Grid>

							<!-- annotation content editing -->
							<Grid Grid.Column="0" Grid.ColumnSpan="3" Visibility="{Binding IsEditingAnnotationContent,Converter={StaticResource bool2vis}}" >
								<Grid.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
										<TranslateTransform X="{Binding BoundaryTopLeft.X}" Y="{Binding BoundaryTopLeft.Y}" />
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
									</TransformGroup>
								</Grid.RenderTransform>
								<Border DataContext="{Binding EditAnnotationContent}" Background="{StaticResource note_edit_bg}" CornerRadius="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="{Binding Location,Converter={StaticResource positioner}}" Width="{Binding Width}" Height="{Binding Height}" IsHitTestVisible="True">
									<DockPanel>
										<TextBox Background="#2000" Foreground="Black" Text="{Binding Title}" FontSize="24" FontStyle="Italic" TextWrapping="Wrap" AcceptsReturn="True" DockPanel.Dock="Top" Margin="6,1,6,0" />
										<TextBox Background="#2000" Foreground="Black" Text="{Binding Text}" Margin="6,0,6,2" AcceptsReturn="True" FontSize="16" TextWrapping="Wrap" />
									</DockPanel>
								</Border>
							</Grid>

							<!-- connections -->
							<ItemsControl Grid.Column="0" Grid.ColumnSpan="3" ItemsSource="{Binding Connections}" ItemTemplate="{StaticResource connection_visualisation}">
								<ItemsControl.RenderTransform>
									<TransformGroup>
									<ScaleTransform ScaleX="-1" ScaleY="-1" />
									<TranslateTransform X="{Binding BoundaryTopLeft.X}" Y="{Binding BoundaryTopLeft.Y}" />
									<ScaleTransform ScaleX="-1" ScaleY="-1" />
								</TransformGroup>
								</ItemsControl.RenderTransform>
								<ItemsControl.ItemsPanel><ItemsPanelTemplate><Canvas/></ItemsPanelTemplate></ItemsControl.ItemsPanel>
							</ItemsControl>

							<!-- connection hilighting -->
							<Grid Grid.Column="0" Grid.ColumnSpan="3">
								<Grid.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
										<TranslateTransform X="{Binding BoundaryTopLeft.X}" Y="{Binding BoundaryTopLeft.Y}" />
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
									</TransformGroup>
								</Grid.RenderTransform>
								<ContentPresenter Content="{Binding HilightedConnectionDecoration}" ContentTemplate="{StaticResource connection_decoration}" />
							</Grid>

							<!-- procedure io -->
							<!-- INPUTS -->
							<Grid Grid.Column="0" DataContext="{Binding Inputs}" Background="Transparent">
								<Border Style="{StaticResource ProcedureOperatorHighlight_Highlighted}" Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}" Margin="1" SnapsToDevicePixels="true"/>
								<Border Style="{StaticResource Procedure_PromptOverlay}" Visibility="{Binding IsEmpty,Converter={StaticResource bool2vis}}" Margin="1" SnapsToDevicePixels="true" IsHitTestVisible="false">
									<TextBlock Foreground="white" Margin="12,0" TextAlignment="center" VerticalAlignment="center" HorizontalAlignment="center" TextWrapping="Wrap">
										Drag a connection here to create a Procedure Input
									</TextBlock>
								</Border>
								<Grid Background="{StaticResource procinputbg}" Opacity="{Binding IsSelected,Converter={StaticResource bool2double},ConverterParameter=0|0.5}" />
								<ItemsControl HorizontalAlignment="Left" VerticalAlignment="center" ItemsSource="{Binding .}" ItemTemplate="{StaticResource procedure_input_visualisation}" Margin="0,0,0,2" />
							</Grid>
							<!-- OUTPUTS -->
							<Grid Grid.Column="2" DataContext="{Binding Outputs}" Background="Transparent">
								<Border Style="{StaticResource ProcedureOperatorHighlight_Highlighted}" Visibility="{Binding IsHighlighted,Converter={StaticResource bool2vis}}" Margin="1" SnapsToDevicePixels="true"/>
								<Border Style="{StaticResource Procedure_PromptOverlay}" Visibility="{Binding IsEmpty,Converter={StaticResource bool2vis}}" Margin="1" SnapsToDevicePixels="true" IsHitTestVisible="false">
									<TextBlock Foreground="white" Margin="12,0" TextAlignment="center" VerticalAlignment="center" HorizontalAlignment="center" TextWrapping="Wrap">
										Drag a connection here to create a Procedure Output
									</TextBlock>
								</Border>
								<Grid Background="{StaticResource procoutputbg}" Opacity="{Binding IsSelected,Converter={StaticResource bool2double},ConverterParameter=0|0.5}" />
								<ItemsControl HorizontalAlignment="Right" VerticalAlignment="Center" ItemsSource="{Binding .}" ItemTemplate="{StaticResource procedure_output_visualisation}" />
							</Grid>

							<!-- operators -->
							<ItemsControl Grid.Column="0" Grid.ColumnSpan="3" ItemsSource="{Binding Operators}" ItemTemplate="{StaticResource operator_visualisation}">
								<ItemsControl.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
										<TranslateTransform X="{Binding BoundaryTopLeft.X}" Y="{Binding BoundaryTopLeft.Y}" />
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
									</TransformGroup>
								</ItemsControl.RenderTransform>
								<ItemsControl.ItemsPanel><ItemsPanelTemplate><Canvas/></ItemsPanelTemplate></ItemsControl.ItemsPanel>
							</ItemsControl>

							<!-- marquee -->
							<Border Grid.Column="0" Grid.ColumnSpan="3" Visibility="{Binding IsMarqueeSelect,Converter={StaticResource bool2vis}}" Opacity="0.3" BorderBrush="Black" HorizontalAlignment="Left" VerticalAlignment="Top" BorderThickness="1" Width="{Binding MarqueeSize.Width}" Height="{Binding MarqueeSize.Height}">
								<Border.RenderTransform>
									<TransformGroup>
										<TranslateTransform X="{Binding MarqueeTopLeft.X}" Y="{Binding MarqueeTopLeft.Y}" />
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
										<TranslateTransform X="{Binding BoundaryTopLeft.X}" Y="{Binding BoundaryTopLeft.Y}" />
										<ScaleTransform ScaleX="-1" ScaleY="-1" />
									</TransformGroup>
								</Border.RenderTransform>
							</Border>


						</Grid>
					</Grid>
				</Grid> 
			</Grid>
		</Grid>

	</DataTemplate>
	
	</UserControl.Resources>
	
	<!-- MAIN PANEL -->
	<Border BorderBrush="black" BorderThickness="0" CornerRadius="1">
		<DockPanel>
                    <!-- Left splitter -->
                    <Border Background="#01888888" DockPanel.Dock="Left" Width="4" IsHitTestVisible="true" DataContext="{Binding LeftSplitter}" Cursor="SizeWE"/>

                    <!-- Right splitter -->
                    <Border Background="#01888888" DockPanel.Dock="Right" Width="4" IsHitTestVisible="true" DataContext="{Binding RightSplitter}" Cursor="SizeWE"/>

			<Border DockPanel.Dock="Top" >
				<DockPanel>
					<ItemsControl ItemsSource="{Binding ActiveProcedures}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel Orientation="Horizontal" />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<ToggleButton Style="{StaticResource tabbarbutton}" IsChecked="{Binding IsSelected}" ToolTip="{Binding Procedure.FullName}">
									<ToggleButton.Content>
										<DockPanel>
											<ToggleButton DockPanel.Dock="Right" Width="13" Height="14" Padding="0" Margin="2,0,3,0" Opacity="0.4" IsChecked="{Binding IsClosing}" >
												<ToggleButton.Content>
													<TextBlock Text="X" Margin="-1,0,-1,-6" FontSize="11">
														<TextBlock.RenderTransform>
															<TransformGroup>
																<TranslateTransform Y="-5" />
															</TransformGroup>
														</TextBlock.RenderTransform>
													</TextBlock>
												</ToggleButton.Content>
											</ToggleButton>
											<TextBlock Margin="6,2,6,4" Text="{Binding Procedure.Name}" />
										</DockPanel>
									</ToggleButton.Content>
								</ToggleButton>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
					<Border BorderBrush="Black" BorderThickness="0,0,0,1" />
				</DockPanel>
			</Border>
			<Border BorderBrush="Black" BorderThickness="1,0,1,1" Background="{StaticResource background_brush}">
				<Grid>
					<ItemsControl ItemsSource="{Binding ActiveProcedures}" ItemTemplate="{StaticResource proc_graph}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<Grid/>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
					</ItemsControl>

					<!-- Status/Error display -->
					<DockPanel LastChildFill="False">
						<StackPanel DockPanel.Dock="Top" HorizontalAlignment="Right" Orientation="Horizontal" Visibility="{Binding IsStandalone,Converter={StaticResource bool2vis}}">
							<Border Margin="3" Width="21" Height="21" Background="Black" CornerRadius="5" Opacity="{Binding Library.Directory.Parent.Scheduler.IsBusy,Converter={StaticResource bool2double},ConverterParameter=0.3|0.6}">
								<Grid>
									<TextBlock Text="6" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Wingdings" Margin="0,2,0,0" Foreground="{Binding Library.Directory.Parent.Scheduler.IsBusy,Converter={StaticResource bool2string},ConverterParameter=Gray|Yellow}" />
									<ToggleButton Opacity="0.001" ToolTip="Indicates general synthesis activity"/>
								</Grid>
							</Border>
							<Border Margin="1,3,3,3" Width="21" Height="21" Background="Black" CornerRadius="5" Opacity="{Binding SelectedActiveProcedure.IsLive,Converter={StaticResource bool2double},ConverterParameter=0.3|0.6}">
								<Grid>
									<TextBlock Text="4" FontSize="22" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Webdings" Margin="0,2,0,0" Foreground="{Binding SelectedActiveProcedure.IsLive,Converter={StaticResource bool2string},ConverterParameter=Gray|Green}" />
									<ToggleButton IsChecked="{Binding SelectedActiveProcedure.IsLive}" Opacity="0.001" ToolTip="Press to view in 3D view"/>
								</Grid>
							</Border>
						</StackPanel>
						<ScrollViewer DockPanel.Dock="Bottom" Background="#8FFF" MaxHeight="200" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
							<ItemsControl ItemsSource="{Binding Library.Directory.Parent.Scheduler.SelectedJob.Messages}" IsHitTestVisible="False" >
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock Margin="5,0,0,0" Text="{Binding .}" Foreground="Red" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</ScrollViewer>
					</DockPanel>
				</Grid>
			</Border>
		</DockPanel>
	</Border>
</UserControl>
